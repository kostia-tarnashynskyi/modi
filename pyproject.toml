[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "modi"
version = "0.1.0"
description = "A lightweight dependency injection framework for Python, inspired by NestJS"
readme = "README.md"
license = "MIT"
authors = [
    { name = "Kostia Tarnashynskyi", email = "kostia.tarnashynskyi@gmail.com" },
]
maintainers = [
    { name = "Kostia Tarnashynskyi", email = "kostia.tarnashynskyi@gmail.com" },
]
keywords = [
    "dependency-injection",
    "di",
    "ioc",
    "nestjs",
    "framework",
    "python",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
]
requires-python = ">=3.9"
dependencies = []

[project.urls]
Homepage = "https://github.com/kostia-tarnashynskyi/modi"
Documentation = "https://github.com/kostia-tarnashynskyi/modi#readme"
Repository = "https://github.com/kostia-tarnashynskyi/modi"
Issues = "https://github.com/kostia-tarnashynskyi/modi/issues"
Changelog = "https://github.com/kostia-tarnashynskyi/modi/blob/main/CHANGELOG.md"

[tool.hatch.build.targets.wheel]
packages = ["src/modi"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/README.md",
    "/LICENSE",
    "/CHANGELOG.md",
]

[tool.black]
line-length = 88
target-version = ["py39"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py39"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.9"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["src/modi"]
omit = ["*/tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]

[dependency-groups]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "black>=23.0",
    "ruff>=0.1.0",
    "mypy>=1.0",
    "pre-commit>=3.0",
    "twine>=6.0",
    "bandit>=1.7",
    "safety>=2.0",
]
